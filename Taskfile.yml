version: 3

env:
  PHP_VERSION: '{{ .PHP_VERSION | default "7.4" }}'
  WC_VERSION: '{{ .WC_VERSION | default "8.2.2" }}'
  WP_VERSION: '{{ .WP_VERSION | default "6.4.1" }}'
  REPOSITORY: alma-woocommerce-gateway

tasks:

  build:test:
    desc: Build test container
    cmds:
      - docker compose build test

  build:php5-6:
    desc: Build test container
    cmds:
      - docker compose build php5-6

  test:
    desc: Run tests
    deps:
      - build:test
    cmds:
      - docker compose run --rm test
      - docker compose down --remove-orphans

  pre-commit:install:
    desc: Install pre-commit hooks
    cmds:
      - pre-commit install --hook-type commit-msg
      - pre-commit install

  lint:
    desc: Run linter
    deps:
      - build:php5-6
    cmds:
      - docker compose run --rm php5-6 php ./src/vendor/bin/phpcs src

  lint:fix:
    desc: Run linter with autofix
    deps:
      - build:php5-6
    cmds:
      - docker compose run --rm php5-6 php ./src/vendor/bin/phpcbf src

  php-compatibility:
    desc: Check compatibility code
    deps:
      - build:php5-6
    cmds:
      - docker compose run --rm php5-6 php ./src/vendor/bin/phpcs -p src --standard=PHPCompatibility -s --runtime-set testVersion 5.6-8.1 --ignore=\*/vendor/\*

  dist:
    desc: Build zip file
    deps:
      - build:php5-6
    cmds:
      - rm -rf ./dist
      - docker compose run --rm php5-6 ./bin/build.sh

  crowdin:
    internal: true
    preconditions:
      - sh: which crowdin
        msg: Crowdin CLI is required

  crowdin:download:
    desc: Download translations from Crowdin
    deps:
      - crowdin
    cmds:
      - crowdin download
      - ./bin/compile-translations.sh

  crowdin:upload:
    desc: Upload translations to Crowdin
    deps:
      - crowdin
    cmds:
      - crowdin upload sources

  gh-cli:
    internal: true
    preconditions:
      - sh: gh --version
        msg: |
          ⚠️ This task requires `gh` (Github CLI).
          Please check out: https://github.com/cli/cli#installation
          You'll need a personal access token to authenticate with `gh`.
          Please check out: https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token#creating-a-personal-access-token-classic
          Then, run `gh auth login` or set the GITHUB_TOKEN environment variable with your personal access token.

  release:
    deps:
      - gh-cli
    desc: Create a release pull request
    cmds:
      - gh workflow run release-pull-request.yml
      - cmd: sleep 2
        silent: true
      - cmd: echo "Release pull request created, check out https://github.com/alma/{{.REPOSITORY}}/pulls?q=is%3Aopen+is%3Apr+label%3Arelease"
        silent: true
      - cmd: echo "If no pull request is created, check out https://github.com/alma/{{.REPOSITORY}}/actions/workflows/release-pull-request.yml"
        silent: true
      - cmd: echo "Please, review and merge the pull request."
        silent: true
      - cmd: echo "After merging, the release will be automatically created."
        silent: true

  hotfix:
    deps:
      - gh-cli
    desc: Create a hotfix pull request
    preconditions:
      - sh: test -n "{{.CHANGELOG_MESSAGE}}"
        msg: |
          ⚠️ This task requires a changelog message.
          Please provide a changelog message. Example: `task hotfix CHANGELOG_MESSAGE='This is a message'`.
    cmds:
      - gh workflow run hotfix-pull-request.yml -F changelog-message='{{.CHANGELOG_MESSAGE}}'
      - cmd: sleep 2
        silent: true
      - cmd: echo "Hotfix pull request created, check out https://github.com/alma/{{.REPOSITORY}}/pulls?q=is%3Aopen+is%3Apr+label%3Ahotfix"
        silent: true
      - cmd: echo "If no pull request is created, check out https://github.com/alma/{{.REPOSITORY}}/actions/workflows/hotfix-pull-request.yml"
        silent: true
      - cmd: echo "Please, review and merge the pull request."
        silent: true
      - cmd: echo "After merging, the release will be automatically created."
        silent: true
