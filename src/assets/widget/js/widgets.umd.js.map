{"version":3,"file":"widgets.umd.js","sources":["../src/types.ts","../src/utils/index.ts","../src/utils/polyfills.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/jsx-runtime.js","../src/intl/utils.ts","../src/intl/IntlProvider.tsx","../src/utils/filterEligibility.ts","../src/hooks/useFetchEligibility.ts","../src/utils/fetch.ts","../src/Widgets/EligibilityModal/classNames.const.ts","../src/components/Installments/TotalBlock/index.tsx","../src/components/LoadingIndicator/LoadingIndicator.tsx","../src/assets/Cross.tsx","../src/components/Modal/index.tsx","../src/utils/paymentPlanStrings.tsx","../src/Widgets/EligibilityModal/components/EligibilityPlansButtons/index.tsx","../src/components/Installments/Installment/index.tsx","../src/Widgets/EligibilityModal/components/Schedule/index.tsx","../src/assets/almaLogo.tsx","../src/assets/cards/amex.tsx","../src/assets/cards/visa.tsx","../src/assets/cards/mastercard.tsx","../src/assets/cards/cb.tsx","../src/Widgets/EligibilityModal/components/Cards/index.tsx","../src/Widgets/EligibilityModal/components/Info/index.tsx","../src/Widgets/EligibilityModal/components/Title/index.tsx","../src/Widgets/EligibilityModal/DesktopModal/index.tsx","../src/Widgets/EligibilityModal/MobileModal/index.tsx","../src/Widgets/EligibilityModal/index.tsx","../src/Widgets/EligibilityModal/ModalContainer.tsx","../src/components/Loader/index.tsx","../src/Widgets/PaymentPlans/classNames.const.ts","../src/Widgets/PaymentPlans/index.tsx","../src/utils/merchantOrderPreferences.ts","../src/hooks/useButtonAnimation.ts","../src/widgets_controller.tsx","../src/consts.ts","../src/index.ts"],"sourcesContent":["import { ApiMode } from 'consts'\nimport React from 'react'\n\nexport type ApiConfig = { domain: ApiMode; merchantId: string }\n\nexport enum widgetTypes {\n  PaymentPlans = 'PaymentPlans',\n  Modal = 'Modal',\n}\nexport enum apiStatus {\n  PENDING = 'pending',\n  SUCCESS = 'success',\n  FAILED = 'failed',\n}\n\nexport type ConfigPlan = {\n  installmentsCount: number\n  deferredDays?: number\n  deferredMonths?: number\n  minAmount: number\n  maxAmount: number\n}\n\nexport type PaymentPlan = {\n  customer_fee: number\n  customer_interest: number\n  due_date: number\n  purchase_amount: number\n  total_amount: number\n  refunded_interest?: number\n}\nexport type EligibilityPlan = {\n  annual_interest_rate?: number\n  customer_total_cost_amount: number\n  customer_total_cost_bps: number\n  deferred_days: number\n  deferred_months: number\n  eligible: boolean\n  reasons?: Record<string, unknown>\n  installments_count: number\n  payment_plan?: PaymentPlan[]\n  purchase_amount: number\n  constraints?: {\n    purchase_amount?: { minimum: number; maximum: number }\n  }\n}\n\nexport type EligibilityPlanToDisplay = EligibilityPlan & {\n  minAmount?: number\n  maxAmount?: number\n}\n\nexport enum Locale {\n  en = 'en',\n  'fr-FR' = 'fr-FR',\n  fr = 'fr',\n  'de-DE' = 'de-DE',\n  de = 'de',\n  it = 'it',\n  'it-IT' = 'it-IT',\n  es = 'es',\n  'es-ES' = 'es-ES',\n  pt = 'pt',\n  'pt-PT' = 'pt-PT',\n  nl = 'nl',\n  'nl-NL' = 'nl-NL',\n  'nl-BE' = 'nl-BE',\n}\n\nexport type Card = 'cb' | 'amex' | 'mastercard' | 'visa'\n\nexport type PaymentPlanWidgetOptions = {\n  container: string\n  hideIfNotEligible?: boolean\n  locale?: Locale\n  cards?: Card[]\n  monochrome?: boolean\n  plans?: ConfigPlan[]\n  purchaseAmount: number\n  suggestedPaymentPlan?: number | number[]\n  transitionDelay?: number\n  hideBorder?: boolean\n  customerBillingCountry?: string\n  customerShippingCountry?: string\n  onModalClose?: (event: React.MouseEvent | React.KeyboardEvent) => void\n}\n\nexport type ModalOptions = {\n  container: string\n  clickableSelector: string\n  purchaseAmount: number\n  customerBillingCountry?: string\n  customerShippingCountry?: string\n  plans?: ConfigPlan[]\n  locale?: Locale\n  cards?: Card[]\n  onClose?: (event: React.MouseEvent | React.KeyboardEvent) => void\n}\n\nexport type WidgetNames = keyof typeof widgetTypes\n\nexport type WidgetOptions = PaymentPlanWidgetOptions | ModalOptions\n","import { EligibilityPlan } from '../types'\n\nexport function priceToCents(price: number): number {\n  return Math.round(price * 100)\n}\n\nexport function priceFromCents(cents: number): number {\n  return Number((cents / 100).toFixed(2))\n}\n\nexport function formatCents(cents: number): string {\n  return String(priceFromCents(cents)).replace('.', ',')\n}\n\nexport const secondsToMilliseconds = (date: number): number => date * 1000\n\nexport const desktopWidth = 800\n\nexport const isP1X = (plan: EligibilityPlan): boolean =>\n  plan?.installments_count === 1 && plan?.deferred_days === 0 && plan?.deferred_months === 0\n","/* eslint-disable */\n\n/*\n * Element.prototype.closest & Element.prototype.matches polyfills\n */\n\n;(function (ElementProto) {\n  if (typeof ElementProto.matches !== 'function') {\n    ElementProto.matches =\n      ElementProto.msMatchesSelector ||\n      ElementProto.mozMatchesSelector ||\n      ElementProto.webkitMatchesSelector ||\n      function matches(selector) {\n        var element = this\n        var elements = (element.document || element.ownerDocument).querySelectorAll(selector)\n        var index = 0\n\n        while (elements[index] && elements[index] !== element) {\n          ++index\n        }\n\n        return Boolean(elements[index])\n      }\n  }\n\n  if (typeof ElementProto.closest !== 'function') {\n    ElementProto.closest = function closest(selector) {\n      var element = this\n\n      while (element && element.nodeType === 1) {\n        if (element.matches(selector)) {\n          return element\n        }\n\n        element = element.parentNode\n      }\n\n      return null\n    }\n  }\n})(window.Element.prototype)\n\n/*\n * Element.prototype.classList polyfill\n */\n\n// 1. String.prototype.trim polyfill\nif (!''.trim)\n  String.prototype.trim = function () {\n    return this.replace(/^[\\s﻿]+|[\\s﻿]+$/g, '')\n  }\n;(function (window) {\n  'use strict' // prevent global namespace pollution\n  if (!window.DOMException)\n    (DOMException = function (reason) {\n      this.message = reason\n    }).prototype = new Error()\n  var wsRE = /[\\11\\12\\14\\15\\40]/,\n    wsIndex = 0,\n    checkIfValidClassListEntry = function (O, V) {\n      if (V === '')\n        throw new DOMException(\n          \"Failed to execute '\" + O + \"' on 'DOMTokenList': The token provided must not be empty.\"\n        )\n      if ((wsIndex = V.search(wsRE)) !== -1)\n        throw new DOMException(\n          \"Failed to execute '\" +\n            O +\n            \"' on 'DOMTokenList': \" +\n            \"The token provided ('\" +\n            V[wsIndex] +\n            \"') contains HTML space characters, which are not valid in tokens.\"\n        )\n    }\n  // 2. Implement the barebones DOMTokenList livelyness polyfill\n  if (typeof DOMTokenList !== 'function')\n    (function (window) {\n      var document = window.document,\n        Object = window.Object,\n        hasOwnProp = Object.prototype.hasOwnProperty\n      var defineProperty = Object.defineProperty,\n        allowTokenListConstruction = 0,\n        skipPropChange = 0\n\n      var DOMTokenList = function () {\n        if (!allowTokenListConstruction) throw TypeError('Illegal constructor') // internally let it through\n      }\n\n      DOMTokenList.prototype.toString = DOMTokenList.prototype.toLocaleString = function () {\n        return this.value\n      }\n      DOMTokenList.prototype.add = function () {\n        a: for (\n          var v = 0, argLen = arguments.length, val = '', ele = this[' uCL'], proto = ele[' uCLp'];\n          v !== argLen;\n          ++v\n        ) {\n          ;(val = arguments[v] + ''), checkIfValidClassListEntry('add', val)\n          for (var i = 0, Len = proto.length, resStr = val; i !== Len; ++i)\n            if (this[i] === val) continue a\n            else resStr += ' ' + this[i]\n          ;(this[Len] = val), (proto.length += 1), (proto.value = resStr)\n        }\n        ;(skipPropChange = 1), (ele.className = proto.value), (skipPropChange = 0)\n      }\n      DOMTokenList.prototype.remove = function () {\n        for (\n          var v = 0, argLen = arguments.length, val = '', ele = this[' uCL'], proto = ele[' uCLp'];\n          v !== argLen;\n          ++v\n        ) {\n          ;(val = arguments[v] + ''), checkIfValidClassListEntry('remove', val)\n          for (var i = 0, Len = proto.length, resStr = '', is = 0; i !== Len; ++i)\n            if (is) {\n              this[i - 1] = this[i]\n            } else {\n              if (this[i] !== val) {\n                resStr += this[i] + ' '\n              } else {\n                is = 1\n              }\n            }\n          if (!is) continue\n          delete this[Len], (proto.length -= 1), (proto.value = resStr)\n        }\n        ;(skipPropChange = 1), (ele.className = proto.value), (skipPropChange = 0)\n      }\n      window.DOMTokenList = DOMTokenList\n\n      function whenPropChanges() {\n        var evt = window.event,\n          prop = evt.propertyName\n        if (\n          !skipPropChange &&\n          (prop === 'className' || (prop === 'classList' && !defineProperty))\n        ) {\n          var target = evt.srcElement,\n            protoObjProto = target[' uCLp'],\n            strval = '' + target[prop]\n          var tokens = strval.trim().split(wsRE),\n            resTokenList = target[prop === 'classList' ? ' uCL' : 'classList']\n          var oldLen = protoObjProto.length\n          a: for (\n            var cI = 0, cLen = (protoObjProto.length = tokens.length), sub = 0;\n            cI !== cLen;\n            ++cI\n          ) {\n            for (var innerI = 0; innerI !== cI; ++innerI)\n              if (tokens[innerI] === tokens[cI]) {\n                sub++\n                continue a\n              }\n            resTokenList[cI - sub] = tokens[cI]\n          }\n          for (var i = cLen - sub; i < oldLen; ++i) delete resTokenList[i] //remove trailing indexs\n          if (prop !== 'classList') return\n          ;(skipPropChange = 1), (target.classList = resTokenList), (target.className = strval)\n          ;(skipPropChange = 0), (resTokenList.length = tokens.length - sub)\n        }\n      }\n\n      function polyfillClassList(ele) {\n        if (!ele || !('innerHTML' in ele)) throw TypeError('Illegal invocation')\n        ele.detachEvent('onpropertychange', whenPropChanges) // prevent duplicate handler infinite loop\n        allowTokenListConstruction = 1\n        try {\n          var protoObj = function () {}\n\n          protoObj.prototype = new DOMTokenList()\n        } finally {\n          allowTokenListConstruction = 0\n        }\n        var protoObjProto = protoObj.prototype,\n          resTokenList = new protoObj()\n        a: for (\n          var toks = ele.className.trim().split(wsRE), cI = 0, cLen = toks.length, sub = 0;\n          cI !== cLen;\n          ++cI\n        ) {\n          for (var innerI = 0; innerI !== cI; ++innerI)\n            if (toks[innerI] === toks[cI]) {\n              sub++\n              continue a\n            }\n          this[cI - sub] = toks[cI]\n        }\n        ;(protoObjProto.length = cLen - sub),\n          (protoObjProto.value = ele.className),\n          (protoObjProto[' uCL'] = ele)\n        if (defineProperty) {\n          defineProperty(ele, 'classList', {\n            // IE8 & IE9 allow defineProperty on the DOM\n            enumerable: 1,\n            get: function () {\n              return resTokenList\n            },\n            configurable: 0,\n            set: function (newVal) {\n              ;(skipPropChange = 1),\n                (ele.className = protoObjProto.value = newVal += ''),\n                (skipPropChange = 0)\n              var toks = newVal.trim().split(wsRE),\n                oldLen = protoObjProto.length\n              a: for (\n                var cI = 0, cLen = (protoObjProto.length = toks.length), sub = 0;\n                cI !== cLen;\n                ++cI\n              ) {\n                for (var innerI = 0; innerI !== cI; ++innerI)\n                  if (toks[innerI] === toks[cI]) {\n                    sub++\n                    continue a\n                  }\n                resTokenList[cI - sub] = toks[cI]\n              }\n              for (var i = cLen - sub; i < oldLen; ++i) delete resTokenList[i] //remove trailing indexs\n            },\n          })\n          defineProperty(ele, ' uCLp', {\n            // for accessing the hidden prototype\n            enumerable: 0,\n            configurable: 0,\n            writeable: 0,\n            value: protoObj.prototype,\n          })\n          defineProperty(protoObjProto, ' uCL', {\n            enumerable: 0,\n            configurable: 0,\n            writeable: 0,\n            value: ele,\n          })\n        } else {\n          ;(ele.classList = resTokenList),\n            (ele[' uCL'] = resTokenList),\n            (ele[' uCLp'] = protoObj.prototype)\n        }\n        ele.attachEvent('onpropertychange', whenPropChanges)\n      }\n\n      try {\n        // Much faster & cleaner version for IE8 & IE9:\n        // Should work in IE8 because Element.prototype instanceof Node is true according to the specs\n        window.Object.defineProperty(window.Element.prototype, 'classList', {\n          enumerable: 1,\n          get: function (val) {\n            if (!hasOwnProp.call(this, 'classList')) polyfillClassList(this)\n            return this.classList\n          },\n          configurable: 0,\n          set: function (val) {\n            this.className = val\n          },\n        })\n      } catch (e) {\n        // Less performant fallback for older browsers (IE 6-8):\n        window[' uCL'] = polyfillClassList\n        // the below code ensures polyfillClassList is applied to all current and future elements in the doc.\n        document.documentElement.firstChild.appendChild(\n          document.createElement('style')\n        ).styleSheet.cssText =\n          '_*{x-uCLp:expression(!this.hasOwnProperty(\"classList\")&&window[\" uCL\"](this))}' + //  IE6\n          '[class]{x-uCLp/**/:expression(!this.hasOwnProperty(\"classList\")&&window[\" uCL\"](this))}' //IE7-8\n      }\n    })(window)\n    // 3. Patch in unsupported methods in DOMTokenList\n  ;(function (DOMTokenListProto, testClass) {\n    if (!DOMTokenListProto.item)\n      DOMTokenListProto.item = function (i) {\n        function NullCheck(n) {\n          return n === void 0 ? null : n\n        }\n\n        return NullCheck(this[i])\n      }\n    if (!DOMTokenListProto.toggle || testClass.toggle('a', 0) !== false)\n      DOMTokenListProto.toggle = function (val) {\n        if (arguments.length > 1) return this[arguments[1] ? 'add' : 'remove'](val), !!arguments[1]\n        var oldValue = this.value\n        return this.remove(oldValue), oldValue === this.value && (this.add(val), true) /*|| false*/\n      }\n    if (!DOMTokenListProto.replace || typeof testClass.replace('a', 'b') !== 'boolean')\n      DOMTokenListProto.replace = function (oldToken, newToken) {\n        checkIfValidClassListEntry('replace', oldToken),\n          checkIfValidClassListEntry('replace', newToken)\n        var oldValue = this.value\n        return this.remove(oldToken), this.value !== oldValue && (this.add(newToken), true)\n      }\n    if (!DOMTokenListProto.contains)\n      DOMTokenListProto.contains = function (value) {\n        for (var i = 0, Len = this.length; i !== Len; ++i) if (this[i] === value) return true\n        return false\n      }\n    if (!DOMTokenListProto.forEach)\n      DOMTokenListProto.forEach = function (f) {\n        if (arguments.length === 1)\n          for (var i = 0, Len = this.length; i !== Len; ++i) f(this[i], i, this)\n        else\n          for (var i = 0, Len = this.length, tArg = arguments[1]; i !== Len; ++i)\n            f.call(tArg, this[i], i, this)\n      }\n    if (!DOMTokenListProto.entries)\n      DOMTokenListProto.entries = function () {\n        var nextIndex = 0,\n          that = this\n        return {\n          next: function () {\n            return nextIndex < that.length\n              ? {\n                  value: [nextIndex, that[nextIndex]],\n                  done: false,\n                }\n              : { done: true }\n          },\n        }\n      }\n    if (!DOMTokenListProto.values)\n      DOMTokenListProto.values = function () {\n        var nextIndex = 0,\n          that = this\n        return {\n          next: function () {\n            return nextIndex < that.length\n              ? { value: that[nextIndex], done: false }\n              : { done: true }\n          },\n        }\n      }\n    if (!DOMTokenListProto.keys)\n      DOMTokenListProto.keys = function () {\n        var nextIndex = 0,\n          that = this\n        return {\n          next: function () {\n            return nextIndex < that.length ? { value: nextIndex, done: false } : { done: true }\n          },\n        }\n      }\n  })(window.DOMTokenList.prototype, window.document.createElement('div').classList)\n})(window)\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","import messagesDE from 'intl/messages/messages.de.json'\nimport messagesEN from 'intl/messages/messages.en.json'\nimport messagesES from 'intl/messages/messages.es.json'\nimport messagesFR from 'intl/messages/messages.fr.json'\nimport messagesIT from 'intl/messages/messages.it.json'\nimport messagesNL from 'intl/messages/messages.nl.json'\nimport messagesPT from 'intl/messages/messages.pt.json'\nimport { Locale } from 'types'\n\nexport const getTranslationsByLocale = (locale: Locale): Record<string, string> => {\n  // A CMS plugin can add LCID format like : 'fr-FR' instead of 'fr'.\n  // Instead of specifying all possibilities we just remove the last part of the string.\n  const merchantLocale = locale.slice(0, 2)\n  switch (merchantLocale) {\n    case Locale.fr:\n      return messagesFR\n    case Locale.es:\n      return messagesES\n    case Locale.it:\n      return messagesIT\n    case Locale.de:\n      return messagesDE\n    case Locale.pt:\n      return messagesPT\n    case Locale.nl:\n      return messagesNL\n    case Locale.en:\n    default:\n      return messagesEN\n  }\n}\n","import React, { FC, PropsWithChildren } from 'react'\nimport { IntlProvider } from 'react-intl'\nimport { Locale } from 'types'\nimport { getTranslationsByLocale } from './utils'\n\ntype Props = PropsWithChildren & { locale: Locale }\n\nconst Provider: FC<Props> = ({ children, locale }) => (\n  <IntlProvider messages={getTranslationsByLocale(locale)} locale={locale} defaultLocale=\"en\">\n    {children}\n  </IntlProvider>\n)\n\nexport default Provider\n","import { ConfigPlan, EligibilityPlan, EligibilityPlanToDisplay } from 'types'\n\nconst isPlanEligible = (plan: EligibilityPlan, configPlan?: ConfigPlan) => {\n  if (!plan.eligible) {\n    return false\n  }\n  return configPlan\n    ? plan.purchase_amount >= configPlan?.minAmount && plan.purchase_amount <= configPlan?.maxAmount\n    : false\n}\n\nconst getPaymentPlanBoundaries = (plan: EligibilityPlan, configPlan?: ConfigPlan) => {\n  // When the plan is not eligible, the purchase amount constraints is given from the merchant config\n  const purchaseAmountConstraints = plan.constraints?.purchase_amount\n  if (purchaseAmountConstraints && configPlan) {\n    return {\n      minAmount: Math.max(configPlan.minAmount, purchaseAmountConstraints?.minimum),\n      maxAmount: Math.min(configPlan.maxAmount, purchaseAmountConstraints?.maximum),\n    }\n  }\n  return configPlan ?? {}\n}\n\nconst filterEligibility = (\n  eligibilities: EligibilityPlan[],\n  configPlans?: ConfigPlan[],\n): EligibilityPlanToDisplay[] => {\n  // Remove P1X if no configuration is provided\n  if (!configPlans) {\n    return eligibilities.filter(\n      (plan) =>\n        !(plan.installments_count === 1 && plan.deferred_days === 0 && plan.deferred_months === 0),\n    )\n  }\n\n  // Else check if the plan is eligible regarding the related configPlan\n  return eligibilities.map((plan) => {\n    const eligibilityDeferredDays =\n      (plan.deferred_months ? plan.deferred_months : 0) * 30 +\n      (plan.deferred_days ? plan.deferred_days : 0)\n\n    // find the related configPlan\n    const relatedConfigPlan = configPlans.find((configPlan) => {\n      const configPlanDeferredDays =\n        (configPlan.deferredMonths ? configPlan.deferredMonths : 0) * 30 +\n        (configPlan.deferredDays ? configPlan.deferredDays : 0)\n      return (\n        plan.installments_count === configPlan.installmentsCount &&\n        eligibilityDeferredDays === configPlanDeferredDays\n      )\n    })\n\n    return {\n      ...plan,\n      eligible: isPlanEligible(plan, relatedConfigPlan),\n      ...getPaymentPlanBoundaries(plan, relatedConfigPlan),\n    }\n  })\n}\n\nexport default filterEligibility\n","import { useEffect, useState } from 'react'\nimport { ApiConfig, apiStatus, ConfigPlan, EligibilityPlan } from 'types'\nimport { fetchFromApi } from 'utils/fetch'\nimport filterEligibility from 'utils/filterEligibility'\n\nconst useFetchEligibility = (\n  purchaseAmount: number,\n  { domain, merchantId }: ApiConfig,\n  plans?: ConfigPlan[],\n  customerBillingCountry?: string,\n  customerShippingCountry?: string,\n): [EligibilityPlan[], apiStatus] => {\n  const [eligibility, setEligibility] = useState([] as EligibilityPlan[])\n  const [status, setStatus] = useState(apiStatus.PENDING)\n  const configInstallments = plans?.map((plan) => ({\n    installments_count: plan.installmentsCount,\n    deferred_days: plan?.deferredDays,\n    deferred_months: plan?.deferredMonths,\n  }))\n  useEffect(() => {\n    if (status === apiStatus.PENDING) {\n      let billing_address = null\n      if (customerBillingCountry) {\n        billing_address = {\n          country: customerBillingCountry,\n        }\n      }\n\n      let shipping_address = null\n      if (customerShippingCountry) {\n        shipping_address = {\n          country: customerShippingCountry,\n        }\n      }\n      fetchFromApi(\n        domain + '/v2/payments/eligibility',\n        {\n          purchase_amount: purchaseAmount,\n          queries: configInstallments,\n          billing_address,\n          shipping_address,\n        },\n        {\n          Authorization: `Alma-Merchant-Auth ${merchantId}`,\n          'X-Alma-Agent': `Alma Widget/${process.env.VERSION}`,\n        },\n      )\n        .then((res) => {\n          setEligibility(res)\n          setStatus(apiStatus.SUCCESS)\n        })\n        .catch(() => {\n          setStatus(apiStatus.FAILED)\n        })\n    }\n  }, [status])\n\n  return [filterEligibility(eligibility, plans), status]\n}\nexport default useFetchEligibility\n","import { EligibilityPlan } from 'types'\n\nexport async function fetchFromApi(\n  url = '',\n  data: { [key: string]: unknown },\n  headers?: { [key: string]: unknown },\n): Promise<EligibilityPlan[]> {\n  const response = await fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      ...headers,\n    },\n    body: JSON.stringify(data),\n  })\n  return response.json()\n}\n","/**\n * Prefix classes to avoid name collisions.\n */\nconst prefix = 'alma-eligibility-modal'\n\n/**\n * Class names for the **eligibility modale** widget.\n * Those classes are intended to be used by the **merchant developer**.\n */\nconst STATIC_CUSTOMISATION_CLASSES = {\n  desktopModal: prefix + '-desktop-modal',\n  mobileModal: prefix + '-mobile-modal',\n  leftSide: prefix + '-left-side',\n  bullet: prefix + '-bullet',\n  rightSide: prefix + '-right-side',\n  title: prefix + '-title',\n  info: prefix + '-info',\n  infoMessage: prefix + '-info-message',\n  eligibilityOptions: prefix + '-eligibility-options',\n  activeOption: prefix + '-active-option',\n  closeButton: prefix + '-close-button',\n  scheduleDetails: prefix + '-schedule-details',\n  scheduleTotal: prefix + '-schedule-total',\n  scheduleCredit: prefix + '-schedule-credit',\n  cardContainer: prefix + '-card-logos',\n  summary: prefix + '-summary',\n}\n\nexport default STATIC_CUSTOMISATION_CLASSES\n","import React, { FunctionComponent } from 'react'\nimport { FormattedMessage, FormattedNumber, useIntl } from 'react-intl'\nimport { EligibilityPlan } from 'types'\nimport { priceFromCents } from 'utils'\nimport cx from 'classnames'\nimport s from './TotalBlock.module.css'\nimport STATIC_CUSTOMISATION_CLASSES from 'Widgets/EligibilityModal/classNames.const'\n\nconst TotalBlock: FunctionComponent<{ currentPlan: EligibilityPlan }> = ({ currentPlan }) => {\n  const intl = useIntl()\n  const total = priceFromCents(currentPlan.purchase_amount + currentPlan.customer_total_cost_amount)\n  const creditCost = priceFromCents(currentPlan.customer_total_cost_amount)\n  const TAEG = (currentPlan?.annual_interest_rate && currentPlan.annual_interest_rate / 10000) || 0\n  const customerFees = priceFromCents(currentPlan.customer_total_cost_amount)\n  const isCredit = currentPlan.installments_count > 4\n\n  return (\n    <div\n      className={cx(s.container, STATIC_CUSTOMISATION_CLASSES.summary)}\n      data-testid=\"modal-summary\"\n    >\n      <div className={cx(s.total, STATIC_CUSTOMISATION_CLASSES.scheduleTotal)}>\n        <FormattedMessage tagName=\"div\" id=\"installments.total-amount\" defaultMessage=\"Total\" />\n        <FormattedNumber value={total || 0} style=\"currency\" currency=\"EUR\" />\n      </div>\n      <div className={cx(s.fees, STATIC_CUSTOMISATION_CLASSES.scheduleCredit)}>\n        {isCredit ? (\n          <>\n            <FormattedMessage\n              id=\"credit-features.total-credit-cost\"\n              defaultMessage=\"Dont coût du crédit\"\n            />\n            <span className={s.creditCost}>\n              <FormattedMessage\n                id=\"credit-features.credit-cost-display\"\n                defaultMessage=\"{creditCost} (TAEG {taegPercentage})\"\n                values={{\n                  creditCost: intl.formatNumber(creditCost, {\n                    style: 'currency',\n                    currency: 'EUR',\n                  }),\n                  taegPercentage: intl.formatNumber(TAEG, {\n                    style: 'percent',\n                    maximumFractionDigits: 2,\n                  }),\n                }}\n              />\n            </span>\n          </>\n        ) : (\n          <>\n            <FormattedMessage\n              id=\"installments.total-fees\"\n              defaultMessage=\"Dont frais (TTC)\"\n              tagName=\"div\"\n            />\n            <div>\n              <FormattedNumber value={customerFees} style=\"currency\" currency=\"EUR\" />\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default TotalBlock\n","import cx from 'classnames'\nimport React, { FunctionComponent } from 'react'\nimport s from './LoadingIndicator.module.css'\n\nexport const LoadingIndicator: FunctionComponent<{ className?: string }> = ({ className }) => (\n  <div className={cx(s.loadingIndicator, className)} data-testid=\"loader\">\n    <svg\n      width=\"120\"\n      height=\"134\"\n      viewBox=\"0 0 120 134\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M83.8164 41.0325C79.1708 22.8241 69.3458 17 59.9939 17C50.642 17 40.8171 22.8241 36.1715 41.0325L16 117H35.8804C39.119 104.311 49.1016 97.2436 59.9939 97.2436C70.8863 97.2436 80.8689 104.324 84.1075 117H104L83.8164 41.0325ZM59.9939 79.5428C53.6623 79.5428 47.925 82.0552 43.6918 86.1283L55.0936 41.9207C56.1853 37.6953 57.7985 36.3503 60.0061 36.3503C62.2136 36.3503 63.8269 37.6953 64.9185 41.9207L76.3082 86.1283C72.075 82.0552 66.3256 79.5428 59.9939 79.5428Z\"\n        fill=\"#FA5022\"\n      />\n    </svg>\n  </div>\n)\n","import React from 'react'\nfunction CrossIcon({\n  color = '#fff',\n  className,\n}: {\n  color?: string\n  className?: string\n}): JSX.Element {\n  return (\n    <svg\n      className={className}\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 16 16\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M12.5964 11.404L9.41445 8.22205L12.5964 5.04007C12.7732 4.86329 12.7732 4.50974 12.5964 4.33296L11.8893 3.62585C11.6904 3.42698 11.359 3.44908 11.1822 3.62585L8.00023 6.80783L4.81825 3.62585C4.61938 3.42698 4.28792 3.44908 4.11114 3.62585L3.40404 4.33296C3.20516 4.53183 3.20516 4.84119 3.40404 5.04007L6.58602 8.22205L3.40404 11.404C3.20516 11.6029 3.20517 11.9123 3.40404 12.1111L4.11115 12.8182C4.28792 12.995 4.61938 13.0171 4.81825 12.8182L8.00023 9.63626L11.1822 12.8182C11.359 12.995 11.6904 13.0171 11.8893 12.8182L12.5964 12.1111C12.7732 11.9344 12.7732 11.5808 12.5964 11.404Z\"\n        fill={color}\n      />\n    </svg>\n  )\n}\n\nexport default CrossIcon\n","import React, { FunctionComponent, PropsWithChildren } from 'react'\nimport Modal from 'react-modal'\nimport noScroll from 'no-scroll'\nimport cx from 'classnames'\n\nimport s from './Modal.module.css'\nimport CrossIcon from 'assets/Cross'\nimport STATIC_CUSTOMISATION_CLASSES from 'Widgets/EligibilityModal/classNames.const'\n\nexport type Props = PropsWithChildren &\n  Modal.Props & {\n    isOpen: boolean\n    onClose: (event: React.MouseEvent | React.KeyboardEvent) => void\n    className?: string\n    contentClassName?: string\n    scrollable?: boolean\n  }\n\nconst ControlledModal: FunctionComponent<Props> = ({\n  children,\n  isOpen,\n  onClose,\n  className,\n  contentClassName,\n  scrollable = false,\n  ...props\n}) => {\n  /* istanbul ignore next */\n  if (process.env.NODE_ENV !== 'test') Modal.setAppElement('body')\n\n  return (\n    <Modal\n      className={cx(s.modal, className)}\n      overlayClassName={s.overlay}\n      onAfterOpen={() => {\n        noScroll.on()\n      }}\n      onAfterClose={() => {\n        noScroll.off()\n      }}\n      onRequestClose={onClose}\n      isOpen={isOpen}\n      shouldCloseOnOverlayClick\n      shouldCloseOnEsc\n      {...props}\n    >\n      <div className={s.header}>\n        <button\n          onClick={onClose}\n          className={cx(s.closeButton, STATIC_CUSTOMISATION_CLASSES.closeButton)}\n          data-testid=\"modal-close-button\"\n        >\n          <CrossIcon />\n        </button>\n      </div>\n      <div className={cx(s.content, contentClassName, { [s.contentScrollable]: scrollable })}>\n        {children}\n      </div>\n    </Modal>\n  )\n}\n\nexport default ControlledModal\n","import { secondsToMilliseconds } from 'date-fns'\nimport React, { ReactNode } from 'react'\nimport { FormattedDate, FormattedMessage, FormattedNumber } from 'react-intl'\nimport { EligibilityPlan, EligibilityPlanToDisplay } from 'types'\nimport { isP1X, priceFromCents } from 'utils'\n\nexport const paymentPlanShorthandName = (payment: EligibilityPlan): ReactNode => {\n  const { deferred_days, deferred_months, installments_count: installmentsCount } = payment\n  \n  if (installmentsCount === 1 && !deferred_days && !deferred_months) {\n    return (\n      <FormattedMessage\n        id=\"payment-plan-strings.pay.now.button\"\n        defaultMessage=\"Payer maintenant\"\n        \n      />\n    )\n  } \n  if (installmentsCount === 1 && deferred_days) {\n    return (\n      <FormattedMessage\n        id=\"payment-plan-strings.day-abbreviation\"\n        defaultMessage=\"J{deferredDays}\"\n        values={{\n          deferredDays: `+${deferred_days}`,\n        }}\n      />\n    )\n  } \n  if (installmentsCount === 1 && deferred_months) {\n    return (\n      <FormattedMessage\n        id=\"payment-plan-strings.month-abbreviation\"\n        defaultMessage=\"M{deferredMonths}\"\n        values={{\n          deferredMonths: `+${deferred_months}`,\n        }}\n      />\n    )\n  } else {\n    return `${installmentsCount}x`\n  }\n}\n\nconst withNoFee = (payment: EligibilityPlanToDisplay) => {\n  if (\n    payment.payment_plan?.every((plan) => plan.customer_fee === 0 && plan.customer_interest === 0)\n  ) {\n    return (\n      <>\n        {' '}\n        <FormattedMessage id=\"payment-plan-strings.no-fee\" defaultMessage={'(sans frais)'} />\n      </>\n    )\n  }\n}\n\nexport const paymentPlanInfoText = (payment: EligibilityPlanToDisplay): ReactNode => {\n  const {\n    deferred_days,\n    deferred_months,\n    installments_count: installmentsCount,\n    eligible,\n    purchase_amount: purchaseAmount,\n    minAmount = 0,\n    maxAmount = 0,\n    payment_plan,\n  } = payment\n  const deferredDaysCount = deferred_days + deferred_months * 30\n\n  if (!eligible) {\n    return purchaseAmount > maxAmount ? (\n      <FormattedMessage\n        id=\"payment-plan-strings.ineligible-greater-than-max\"\n        defaultMessage=\"Jusqu'à {maxAmount}\"\n        values={{\n          maxAmount: (\n            <FormattedNumber value={priceFromCents(maxAmount)} style=\"currency\" currency=\"EUR\" />\n          ),\n        }}\n      />\n    ) : (\n      <FormattedMessage\n        id=\"payment-plan-strings.ineligible-lower-than-min\"\n        defaultMessage=\"À partir de {minAmount}\"\n        values={{\n          minAmount: (\n            <FormattedNumber value={priceFromCents(minAmount)} style=\"currency\" currency=\"EUR\" />\n          ),\n        }}\n      />\n    )\n  } else if (!payment_plan) {\n    /* This error should never happen. We added this condition to avoid a typescript warning on\n         payment_plan possibly undefined. As far as we know, it only happens when the plan is not\n         eligible, which is checked above. */\n    throw Error(\n      `No payment plan provided for payment in ${installmentsCount} installments. Please contact us if you see this error.`,\n    )\n  } else if (deferredDaysCount !== 0 && installmentsCount === 1) {\n    return (\n      <>\n        <FormattedMessage\n          id=\"payment-plan-strings.deferred\"\n          defaultMessage=\"{totalAmount} à payer le {dueDate}\"\n          values={{\n            totalAmount: (\n              <FormattedNumber\n                value={priceFromCents(payment_plan[0].total_amount)}\n                style=\"currency\"\n                currency=\"EUR\"\n              />\n            ),\n            dueDate: (\n              <FormattedDate\n                value={secondsToMilliseconds(payment_plan[0].due_date)}\n                day=\"numeric\"\n                month=\"long\"\n                year=\"numeric\"\n              />\n            ),\n          }}\n        />\n        {withNoFee(payment)}\n      </>\n    )\n  } else if (installmentsCount > 0) {\n    const areInstallmentsOfSameAmount = payment_plan?.every(\n      (installment, index) =>\n        index === 0 || installment.total_amount === payment_plan[0].total_amount,\n    )\n\n    if (isP1X(payment)) {\n      return (\n        <>\n          <FormattedMessage\n            id=\"payment-plan-strings.pay-now\"\n            defaultMessage=\"Payer maintenant {totalAmount}\"\n            values={{\n              totalAmount: (\n                <FormattedNumber\n                  value={priceFromCents(payment_plan[0].total_amount)}\n                  style=\"currency\"\n                  currency=\"EUR\"\n                />\n              ),\n              installmentsCount,\n            }}\n          />\n          {withNoFee(payment)}\n        </>\n      )\n    }\n\n    if (areInstallmentsOfSameAmount) {\n      return (\n        <>\n          <FormattedMessage\n            id=\"payment-plan-strings.multiple-installments-same-amount\"\n            defaultMessage=\"{installmentsCount} x {totalAmount}\"\n            values={{\n              totalAmount: (\n                <FormattedNumber\n                  value={priceFromCents(payment_plan[0].total_amount)}\n                  style=\"currency\"\n                  currency=\"EUR\"\n                />\n              ),\n              installmentsCount,\n            }}\n          />\n          {withNoFee(payment)}\n        </>\n      )\n    }\n\n    return (\n      <>\n        <FormattedMessage\n          id=\"payment-plan-strings.multiple-installments\"\n          defaultMessage=\"{numberOfRemainingInstallments, plural, one {{firstInstallmentAmount} puis {numberOfRemainingInstallments} x {othersInstallmentAmount}} other {{firstInstallmentAmount} puis {numberOfRemainingInstallments} x {othersInstallmentAmount}}}\"\n          values={{\n            firstInstallmentAmount: (\n              <FormattedNumber\n                value={priceFromCents(payment_plan[0].total_amount)}\n                style=\"currency\"\n                currency=\"EUR\"\n              />\n            ),\n            numberOfRemainingInstallments: installmentsCount - 1,\n            othersInstallmentAmount: (\n              <FormattedNumber\n                value={priceFromCents(payment_plan[1].total_amount)}\n                style=\"currency\"\n                currency=\"EUR\"\n              />\n            ),\n          }}\n        />\n        {withNoFee(payment)}\n      </>\n    )\n  }\n  return (\n    <FormattedMessage\n      id=\"payment-plan-strings.default-message\"\n      defaultMessage=\"Payez en plusieurs fois avec Alma\"\n    />\n  )\n}\n","import React, { FC } from 'react'\nimport cx from 'classnames'\nimport { EligibilityPlan } from 'types'\n\nimport { paymentPlanShorthandName } from 'utils/paymentPlanStrings'\nimport s from './EligibilityPlansButtons.module.css'\nimport STATIC_CUSTOMISATION_CLASSES from 'Widgets/EligibilityModal/classNames.const'\n\nconst EligibilityPlansButtons: FC<{\n  eligibilityPlans: EligibilityPlan[]\n  currentPlanIndex: number\n  setCurrentPlanIndex: (index: number) => void\n}> = ({ eligibilityPlans, currentPlanIndex, setCurrentPlanIndex }) => (\n  <div className={cx(s.buttons, STATIC_CUSTOMISATION_CLASSES.eligibilityOptions)}>\n    {eligibilityPlans.map((eligibilityPlan, index) => (\n      <button\n        key={index}\n        className={cx({\n          [cx(s.active, STATIC_CUSTOMISATION_CLASSES.activeOption)]: index === currentPlanIndex,\n        })}\n        onClick={() => setCurrentPlanIndex(index)}\n      >\n        <span className={s.textButton}>{paymentPlanShorthandName(eligibilityPlan)}</span>\n      </button>\n    ))}\n  </div>\n)\n\nexport default EligibilityPlansButtons\n","import { FormattedDate, FormattedMessage, FormattedNumber } from 'react-intl'\nimport React, { FC } from 'react'\n\nimport s from './Installment.module.css'\nimport { PaymentPlan } from 'types'\nimport cx from 'classnames'\nimport { isToday } from 'date-fns'\n\ntype Props = {\n  installment: PaymentPlan\n  index: number\n}\n\nconst Installment: FC<Props> = ({ installment, index }) => {\n  return (\n    <div className={s.installment} data-testid={`installment-${index}`}>\n      <div className={s.date}>\n        <div className={cx(s.dot, { [s.isCurrent]: index === 0 })} />\n        {isToday(installment.due_date * 1000) ? (\n          <FormattedMessage id=\"installments.today\" defaultMessage=\"Aujourd'hui\" tagName=\"strong\" />\n        ) : (\n          <FormattedDate\n            value={installment.due_date * 1000}\n            day=\"numeric\"\n            month=\"long\"\n            year=\"numeric\"\n          />\n        )}\n      </div>\n      <div className={cx({ [s.bold]: index === 0 })}>\n        <FormattedNumber value={installment.total_amount / 100} style=\"currency\" currency=\"EUR\" />\n      </div>\n    </div>\n  )\n}\n\nexport default Installment\n","import cx from 'classnames'\nimport React, { FC } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { EligibilityPlan } from 'types'\n\nimport Installment from 'components/Installments/Installment'\nimport STATIC_CUSTOMISATION_CLASSES from 'Widgets/EligibilityModal/classNames.const'\nimport s from './Schedule.module.css'\n\nconst Schedule: FC<{ currentPlan: EligibilityPlan }> = ({ currentPlan }) => {\n  const isCredit = currentPlan.installments_count > 4\n\n  return (\n    <>\n      <div\n        className={cx(s.schedule, STATIC_CUSTOMISATION_CLASSES.scheduleDetails)}\n        data-testid=\"modal-installments-element\"\n      >\n        {(currentPlan?.payment_plan || []).map((installment, index) => (\n          <Installment key={installment.due_date * 1000} installment={installment} index={index} />\n        ))}\n        {isCredit && (\n          <div className={s.creditInfo}>\n            <FormattedMessage\n              id=\"credit-features.information\"\n              defaultMessage=\"Un crédit vous engage et doit être remboursé. Vérifiez vos capacités de remboursement avant de vous engager.\"\n            />\n          </div>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default Schedule\n","import React, { SVGAttributes, FunctionComponent } from 'react'\n\ntype Props = {\n  color?: string\n} & SVGAttributes<SVGElement>\n\nexport const AlmaLogo: FunctionComponent<Props> = ({ color = '#FA5022', ...svgProps }) => {\n  return (\n    <svg\n      width=\"50\"\n      height=\"25\"\n      viewBox=\"0 0 360 109\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...svgProps}\n    >\n      <path\n        d=\"M333.24 28.3462V38.4459C327.504 31.1018 319.176 26.5132 309.288 26.5132C290.208 26.5132 275.424 43.5497 275.424 64.5757C275.424 85.6018 290.208 102.638 309.288 102.638C319.872 102.638 328.668 97.3908 334.416 89.1241V100.817H352.668V28.3462H333.24ZM314.028 84.4876C303.42 84.4876 294.828 75.574 294.828 64.5757C294.828 53.5775 303.42 44.6639 314.028 44.6639C324.636 44.6639 333.228 53.5775 333.228 64.5757C333.228 75.574 324.636 84.4876 314.028 84.4876ZM109.5 8.23073H128.916V100.805H109.5V8.23073ZM151.248 59.7356C151.248 39.8117 163.5 26.5252 180.468 26.5252C191.004 26.5252 199.332 31.1976 204.348 39.1648C209.376 31.1976 217.692 26.5252 228.228 26.5252C245.196 26.5252 257.448 39.8117 257.448 59.7356V100.817H238.032V57.639C238.032 49.8635 232.872 44.7957 226.044 44.7957C219.216 44.7957 214.056 49.8755 214.056 57.639V100.817H194.64V57.639C194.64 49.8635 189.48 44.7957 182.652 44.7957C175.824 44.7957 170.664 49.8755 170.664 57.639V100.817H151.248V59.7356ZM74.34 29.101C69.744 11.9088 60.0241 6.40967 50.772 6.40967C41.5201 6.40967 31.8 11.9088 27.204 29.101L7.24805 100.829H26.916C30.12 88.8485 39.996 82.1753 50.772 82.1753C61.548 82.1753 71.424 88.8605 74.6281 100.829H94.3081L74.34 29.101ZM50.772 65.4623C44.508 65.4623 38.8321 67.8345 34.6441 71.6803L45.924 29.9397C47.0041 25.9501 48.6001 24.6802 50.784 24.6802C52.9681 24.6802 54.5641 25.9501 55.6441 29.9397L66.912 71.6803C62.724 67.8345 57.036 65.4623 50.772 65.4623Z\"\n        fill={color}\n      />\n    </svg>\n  )\n}\n","import React, { FC } from 'react'\nconst AmexCard: FC = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"16\" viewBox=\"0 0 24 16\">\n    <defs>\n      <linearGradient id=\"cardamex\" x1=\"10.914%\" x2=\"87.432%\" y1=\"86.279%\" y2=\"15.035%\">\n        <stop offset=\"0%\" stopColor=\"#3FA9F5\"></stop>\n        <stop offset=\"100%\" stopColor=\"#0071BC\"></stop>\n      </linearGradient>\n    </defs>\n    <g fill=\"none\" fillRule=\"evenodd\">\n      <path\n        fill=\"url(#cardamex)\"\n        fillRule=\"nonzero\"\n        d=\"M22.559 16H1.379C.627 16 0 15.392 0 14.662V1.338C0 .608.627 0 1.379 0H22.62C23.373 0 24 .608 24 1.338v13.324c-.063.73-.627 1.338-1.441 1.338z\"\n      ></path>\n      <g fill=\"#FFF\">\n        <path d=\"M10.115 8.711L8.889 6.044H7.295v3.852L5.517 6.044H4.17l-1.778 4.03h1.103l.368-.889h2.023l.368.89h2.084V7.11l1.349 2.963h.92l1.348-2.904v2.904h.98v-4.03H11.28l-1.165 2.667zm-5.272-.474H4.23l.613-1.422v.06l.613 1.362h-.613z\"></path>\n        <path\n          fillRule=\"nonzero\"\n          d=\"M19.372 7.94l.735-.77 1.042-1.185h-1.287L18.697 7.23l-1.164-1.245h-3.985v3.97h3.923l1.226-1.303 1.165 1.304h1.287L20.107 8.71l-.735-.77zM16.92 9.186h-2.33v-.77h2.268v-.77H14.59v-.712h2.33L18.084 8 16.92 9.185z\"\n        ></path>\n      </g>\n    </g>\n  </svg>\n)\n\nexport default AmexCard\n","import React, { FC } from 'react'\nconst VisaCard: FC = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"16\" viewBox=\"0 0 24 16\">\n    <g fill=\"none\" fillRule=\"nonzero\">\n      <path\n        fill=\"#FCFCFC\"\n        d=\"M22.684 16H1.38C.627 16 0 15.39 0 14.656V1.344C0 .61.627 0 1.379 0H22.62C23.373 0 24 .61 24 1.344v13.374c0 .671-.564 1.282-1.316 1.282z\"\n      ></path>{' '}\n      <path\n        fill=\"#005098\"\n        d=\"M8.889 10.726l.948-5.393h1.482l-.949 5.393zM15.704 5.452a3.658 3.658 0 0 0-1.304-.237c-1.481 0-2.489.71-2.489 1.778 0 .77.711 1.185 1.304 1.481.592.237.77.415.77.652 0 .355-.474.533-.889.533-.592 0-.889-.059-1.363-.296l-.177-.06-.178 1.186c.355.178 1.007.296 1.659.296 1.54 0 2.548-.71 2.548-1.837 0-.592-.415-1.067-1.244-1.481-.534-.237-.83-.415-.83-.652 0-.237.237-.474.83-.474.474 0 .83.118 1.126.178l.118.059.119-1.126M19.496 5.333H18.37c-.355 0-.592.119-.77.474l-2.193 4.919h1.541s.237-.652.296-.83h1.897c.059.178.178.83.178.83h1.362l-1.185-5.393zM17.66 8.77l.593-1.481s.118-.296.178-.533l.118.474s.296 1.303.356 1.54h-1.245zM7.644 5.333L6.222 9.007l-.178-.77C5.748 7.348 4.92 6.459 4.03 5.985l1.303 4.682h1.541l2.311-5.393h-1.54\"\n      ></path>\n      <path\n        fill=\"#F6A500\"\n        d=\"M4.919 5.333h-2.37v.119c1.836.474 3.08 1.54 3.555 2.844L5.57 5.807c-.118-.414-.355-.474-.651-.474\"\n      ></path>\n      <path\n        fill=\"#0A5296\"\n        d=\"M23.937 3.23H0V1.316C0 .598.627 0 1.379 0H22.62C23.373 0 24 .598 24 1.316V3.23h-.063z\"\n      ></path>\n      <path\n        fill=\"#F4A428\"\n        d=\"M.063 13H24v1.8c0 .655-.625 1.2-1.375 1.2H1.375C.625 16 0 15.455 0 14.8V13h.063z\"\n      ></path>\n    </g>\n  </svg>\n)\n\nexport default VisaCard\n","import React, { FC } from 'react'\nconst MasterCard: FC = () => (\n  <svg\n    width=\"24px\"\n    height=\"16px\"\n    viewBox=\"0 0 24 16\"\n    version=\"1.1\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <g id=\"Parcours-1C-B\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n      <g id=\"mobile-1C-Paiement-V1\" transform=\"translate(-269.000000, -313.000000)\">\n        <g id=\"mastercard\" transform=\"translate(269.000000, 313.000000)\">\n          <rect id=\"Rectangle\" fill=\"#FFFFFF\" x=\"0\" y=\"0\" width=\"24\" height=\"16\" rx=\"1\"></rect>\n          <g id=\"Group-6\" transform=\"translate(4.000000, 3.000000)\">\n            <circle\n              id=\"Oval-4-Copy\"\n              fill=\"#EA001B\"\n              cx=\"5.05263158\"\n              cy=\"5.05263158\"\n              r=\"5.05263158\"\n            ></circle>\n            <circle\n              id=\"Oval-4\"\n              fillOpacity=\"0.25\"\n              fill=\"#F79F1A\"\n              cx=\"10.9473684\"\n              cy=\"5.05263158\"\n              r=\"5.05263158\"\n            ></circle>\n            <circle\n              id=\"Oval-4-Copy-2\"\n              fillOpacity=\"0.9\"\n              fill=\"#F79F1A\"\n              cx=\"10.9473684\"\n              cy=\"5.05263158\"\n              r=\"5.05263158\"\n            ></circle>\n            <circle\n              id=\"Oval-4-Copy-3\"\n              fillOpacity=\"0.3\"\n              fill=\"#EA001B\"\n              cx=\"5.05263158\"\n              cy=\"5.05263158\"\n              r=\"5.05263158\"\n            ></circle>\n          </g>\n        </g>\n      </g>\n    </g>\n  </svg>\n)\n\nexport default MasterCard\n","import React, { FC } from 'react'\nconst CbCard: FC = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"16\" viewBox=\"0 0 24 16\">\n    <defs>\n      <linearGradient id=\"cardcb\" x1=\"5.842%\" x2=\"95.393%\" y1=\"81.753%\" y2=\"17.344%\">\n        <stop offset=\"0%\" stopColor=\"#39B54A\"></stop>{' '}\n        <stop offset=\"100%\" stopColor=\"#0A5296\"></stop>\n      </linearGradient>\n    </defs>\n    <g fill=\"none\" fillRule=\"nonzero\">\n      <path\n        fill=\"url(#cardcb)\"\n        d=\"M22.621 16H1.38C.627 16 0 15.392 0 14.662V1.338C0 .608.627 0 1.379 0H22.62C23.373 0 24 .608 24 1.338v13.324c-.063.73-.627 1.338-1.379 1.338z\"\n      ></path>\n      <g fill=\"#FFF\">\n        <path d=\"M19.094 4.03h-6.437V8h6.498c1.165 0 2.084-.889 2.084-2.015-.06-1.066-.98-1.955-2.145-1.955zM19.094 8.593h-6.437v3.97h6.498c1.165 0 2.084-.889 2.084-2.015-.06-1.067-.98-1.955-2.145-1.955zM7.017 8.06h4.966c-.245-2.371-2.391-4.267-4.966-4.267-2.758 0-5.027 2.074-5.027 4.681s2.269 4.682 5.027 4.682c2.698 0 4.904-2.015 5.027-4.563H7.017v-.534z\"></path>\n      </g>\n    </g>\n  </svg>\n)\n\nexport default CbCard\n","import React, { FC } from 'react'\nimport { Card } from 'types'\nimport AmexCard from 'assets/cards/amex'\nimport VisaCard from 'assets/cards/visa'\nimport MasterCard from 'assets/cards/mastercard'\nimport CbCard from 'assets/cards/cb'\nimport s from './Cards.module.css'\nimport STATIC_CUSTOMISATION_CLASSES from 'Widgets/EligibilityModal/classNames.const'\nimport cx from 'classnames'\n\ntype Props = {\n  cards: Card[]\n}\n\nconst Cards: FC<Props> = ({ cards }) => {\n  // We transform to a Set and back to avoid duplicate values (ex : amex, amex)\n  const uniqueCards = Array.from(new Set(cards))\n\n  return (\n    <div\n      data-testid=\"card-logos\"\n      className={cx(s.cardContainer, STATIC_CUSTOMISATION_CLASSES.cardContainer)}\n    >\n      {uniqueCards.map((card: Card) => (\n        <div key={card} className={s.card} data-testid={`card-logo-${card}`}>\n          {card === 'cb' && <CbCard />}\n          {card === 'amex' && <AmexCard />}\n          {card === 'mastercard' && <MasterCard />}\n          {card === 'visa' && <VisaCard />}\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default Cards\n","import React, { FC } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport s from './Info.module.css'\nimport cx from 'classnames'\nimport STATIC_CUSTOMISATION_CLASSES from 'Widgets/EligibilityModal/classNames.const'\n\nconst Info: FC<{ isCurrentPlanP1X: boolean }> = ({ isCurrentPlanP1X }) => (\n  // TODO: refactor this component into subcomponent to factorise code and be cleaner\n  <div className={cx(s.list, STATIC_CUSTOMISATION_CLASSES.info)} data-testid=\"modal-info-element\">\n    <div className={s.listItem}>\n      <div className={cx(s.bullet, STATIC_CUSTOMISATION_CLASSES.bullet)}>1</div>\n      <div className={STATIC_CUSTOMISATION_CLASSES.infoMessage}>\n        {isCurrentPlanP1X ? (\n          <FormattedMessage\n            id=\"eligibility-modal.p1x-bullet-1\"\n            defaultMessage=\"Choisissez <strong>Alma - Payer maintenant</strong> au moment du paiement.\"\n            values={{ strong: (chunks) => <strong>{chunks}</strong> }}\n          />\n        ) : (\n          <FormattedMessage\n            id=\"eligibility-modal.bullet-1\"\n            defaultMessage=\"Choisissez <strong>Alma</strong> au moment du paiement.\"\n            values={{ strong: (chunks) => <strong>{chunks}</strong> }}\n          />\n        )}\n      </div>\n    </div>\n    <div className={s.listItem}>\n      <div className={cx(s.bullet, STATIC_CUSTOMISATION_CLASSES.bullet)}>2</div>\n      <div className={STATIC_CUSTOMISATION_CLASSES.infoMessage}>\n        {isCurrentPlanP1X ? (\n          <FormattedMessage\n            id=\"eligibility-modal.p1x-bullet-2\"\n            defaultMessage=\"Renseignez les informations de votre <strong>carte bancaire.</strong>\"\n            values={{ strong: (chunks) => <strong>{chunks}</strong> }}\n          />\n        ) : (\n          <FormattedMessage\n            id=\"eligibility-modal.bullet-2\"\n            defaultMessage=\"Laissez-vous guider et validez votre paiement en <strong>2 minutes.</strong>\"\n            values={{ strong: (chunks) => <strong>{chunks}</strong> }}\n          />\n        )}\n      </div>\n    </div>\n    <div className={s.listItem}>\n      <div className={cx(s.bullet, STATIC_CUSTOMISATION_CLASSES.bullet)}>3</div>\n      <div className={STATIC_CUSTOMISATION_CLASSES.infoMessage}>\n        {isCurrentPlanP1X ? (\n          <FormattedMessage\n            id=\"eligibility-modal.p1x-bullet-3\"\n            defaultMessage=\"<strong>La validation </strong> de votre paiement est instantanée !\"\n            values={{ strong: (chunks) => <strong>{chunks}</strong> }}\n          />\n        ) : (\n          <FormattedMessage\n            id=\"eligibility-modal.bullet-3\"\n            defaultMessage=\"<strong>Gardez le contrôle</strong> en avançant ou reculant vos échéances à votre rythme.\"\n            values={{ strong: (chunks) => <strong>{chunks}</strong> }}\n          />\n        )}\n      </div>\n    </div>\n  </div>\n)\n\nexport default Info\n","import React, { FC } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport STATIC_CUSTOMISATION_CLASSES from 'Widgets/EligibilityModal/classNames.const'\nimport cx from 'classnames'\n\nimport s from './Title.module.css'\n\nconst Title: FC<{ isSomePlanDeferred: boolean, isCurrentPlanP1X:boolean }> = ({ isSomePlanDeferred, isCurrentPlanP1X }) => (\n  <div\n    className={cx(s.title, STATIC_CUSTOMISATION_CLASSES.title)}\n    data-testid=\"modal-title-element\"\n  >\n    {isSomePlanDeferred ? (\n      <FormattedMessage\n        id=\"eligibility-modal.title-deferred-plan\"\n        defaultMessage=\"Payez en plusieurs fois ou plus tard par carte bancaire avec Alma.\"\n      />\n    ) : isCurrentPlanP1X ? (<FormattedMessage\n      id=\"eligibility-modal.title-pay-now\"\n      defaultMessage=\"Payez comptant par carte bancaire avec Alma.\"\n    />\n    ) : (\n      <FormattedMessage\n        id=\"eligibility-modal.title-normal\"\n        defaultMessage=\"Payez en plusieurs fois par carte bancaire avec Alma.\"\n      />\n    )}\n  </div>\n)\n\nexport default Title\n","import { AlmaLogo } from 'assets/almaLogo'\nimport cx from 'classnames'\nimport React, { FC, PropsWithChildren } from 'react'\nimport { Card } from 'types'\nimport STATIC_CUSTOMISATION_CLASSES from '../classNames.const'\nimport Cards from '../components/Cards'\nimport Info from '../components/Info'\nimport Title from '../components/Title'\nimport s from './DesktopModal.module.css'\n\ntype Props = PropsWithChildren & {\n  isCurrentPlanP1X: boolean\n  isSomePlanDeferred: boolean\n  cards?: Card[]\n}\nconst DesktopModal: FC<Props> = ({ children, isSomePlanDeferred, cards, isCurrentPlanP1X }) => (\n  <div\n    className={cx(s.container, STATIC_CUSTOMISATION_CLASSES.desktopModal)}\n    data-testid=\"modal-container\"\n  >\n    <aside className={cx([s.block, s.left, STATIC_CUSTOMISATION_CLASSES.leftSide])}>\n      <Title isSomePlanDeferred={isSomePlanDeferred} isCurrentPlanP1X={isCurrentPlanP1X} />\n      <Info isCurrentPlanP1X={isCurrentPlanP1X} />\n      {cards && <Cards cards={cards} />}\n      <AlmaLogo className={s.logo} width=\"75\" />\n    </aside>\n    <div className={cx(s.block, STATIC_CUSTOMISATION_CLASSES.rightSide)}>{children}</div>\n  </div>\n)\n\nexport default DesktopModal\n","import React, { FC, PropsWithChildren } from 'react'\nimport { Card } from 'types'\nimport STATIC_CUSTOMISATION_CLASSES from '../classNames.const'\nimport Cards from '../components/Cards'\nimport Info from '../components/Info'\nimport Title from '../components/Title'\nimport s from './MobileModal.module.css'\nimport cx from 'classnames'\nimport { AlmaLogo } from 'assets/almaLogo'\n\ntype Props = PropsWithChildren & {\n  isCurrentPlanP1X: boolean\n  isSomePlanDeferred: boolean\n  cards?: Card[]\n}\nconst MobileModal: FC<Props> = ({ children, isSomePlanDeferred, cards, isCurrentPlanP1X }) => (\n  <div\n    className={cx(s.container, STATIC_CUSTOMISATION_CLASSES.mobileModal)}\n    data-testid=\"modal-container\"\n  >\n    <Title isSomePlanDeferred={isSomePlanDeferred} isCurrentPlanP1X={isCurrentPlanP1X} />\n    {children}\n    <Info isCurrentPlanP1X={isCurrentPlanP1X} />\n    {cards && <Cards cards={cards} />}\n    <AlmaLogo className={s.logo} width=\"75\" />\n  </div>\n)\n\nexport default MobileModal\n","import TotalBlock from 'components/Installments/TotalBlock'\nimport { LoadingIndicator } from 'components/LoadingIndicator/LoadingIndicator'\nimport Modal from 'components/Modal'\nimport React, { FunctionComponent, useState } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { useMediaQuery } from 'react-responsive'\nimport { apiStatus, Card, EligibilityPlan } from 'types'\nimport { desktopWidth, isP1X } from 'utils'\nimport EligibilityPlansButtons from './components/EligibilityPlansButtons'\nimport Schedule from './components/Schedule'\nimport DesktopModal from './DesktopModal'\nimport s from './EligibilityModal.module.css'\nimport MobileModal from './MobileModal'\n\ntype Props = {\n  initialPlanIndex?: number\n  onClose: (event: React.MouseEvent | React.KeyboardEvent) => void\n  eligibilityPlans: EligibilityPlan[]\n  status: apiStatus\n  cards?: Card[]\n}\n\nconst EligibilityModal: FunctionComponent<Props> = ({\n  initialPlanIndex,\n  onClose,\n  eligibilityPlans,\n  status,\n  cards,\n}) => {\n  const [currentPlanIndex, setCurrentPlanIndex] = useState(initialPlanIndex || 0)\n  const isBigScreen = useMediaQuery({ minWidth: desktopWidth })\n  const ModalComponent = isBigScreen ? DesktopModal : MobileModal\n  const eligiblePlans = eligibilityPlans.filter((plan) => plan.eligible)\n  const currentPlan = eligiblePlans[currentPlanIndex]\n\n  const isSomePlanDeferred = eligibilityPlans.some(\n    (plan) => plan.deferred_days > 0 || plan.deferred_months > 0,\n  )\n\n  return (\n    <Modal onClose={onClose} ariaHideApp={false} scrollable isOpen>\n      <ModalComponent\n        isSomePlanDeferred={isSomePlanDeferred}\n        cards={cards}\n        isCurrentPlanP1X={isP1X(currentPlan)}\n      >\n        {status === apiStatus.PENDING && (\n          <div className={s.loader}>\n            <LoadingIndicator />\n          </div>\n        )}\n        {status === apiStatus.SUCCESS && eligiblePlans.length === 0 && (\n          <div className={s.noEligibility}>\n            <FormattedMessage\n              id=\"eligibility-modal.no-eligibility\"\n              defaultMessage=\"Oups, il semblerait que la simulation n'ait pas fonctionné.\"\n            />\n          </div>\n        )}\n        {status === apiStatus.SUCCESS && eligiblePlans.length >= 1 && (\n          <>\n            <EligibilityPlansButtons\n              eligibilityPlans={eligiblePlans}\n              currentPlanIndex={currentPlanIndex}\n              setCurrentPlanIndex={setCurrentPlanIndex}\n            />\n            <div className={s.scheduleArea}>\n              <div className={s.verticalLine} />\n              <Schedule currentPlan={currentPlan} />\n              <TotalBlock currentPlan={currentPlan} />\n            </div>\n          </>\n        )}\n      </ModalComponent>\n    </Modal>\n  )\n}\nexport default EligibilityModal\n","import useFetchEligibility from 'hooks/useFetchEligibility'\nimport React from 'react'\nimport { ApiConfig, Card, ConfigPlan } from 'types'\nimport EligibilityModal from '.'\n\ntype Props = {\n  purchaseAmount: number\n  apiData: ApiConfig\n  configPlans?: ConfigPlan[]\n  customerBillingCountry?: string\n  customerShippingCountry?: string\n  onClose: (event: React.MouseEvent | React.KeyboardEvent) => void\n  cards?: Card[]\n}\n\n/**\n * This component allows to display only the modal, without PaymentPlans.\n */\nconst ModalContainer: React.FC<Props> = ({\n  purchaseAmount,\n  apiData,\n  configPlans,\n  customerBillingCountry,\n  customerShippingCountry,\n  onClose,\n  cards,\n}) => {\n  const [eligibilityPlans, status] = useFetchEligibility(\n    purchaseAmount,\n    apiData,\n    configPlans,\n    customerBillingCountry,\n    customerShippingCountry,\n  )\n\n  return (\n    <EligibilityModal\n      initialPlanIndex={0}\n      onClose={onClose}\n      eligibilityPlans={eligibilityPlans}\n      status={status}\n      cards={cards}\n    />\n  )\n}\n\nexport default ModalContainer\n","import React, { FunctionComponent } from 'react'\nimport s from './Loader.module.css'\nimport cx from 'classnames'\n\nconst Loader: FunctionComponent<{ className?: string }> = ({ className }) => {\n  return (\n    <div className={cx(s.loadingIndicator, className)} data-testid=\"loader\">\n      <div className={s.line1} />\n      <div className={s.line2} />\n    </div>\n  )\n}\n\nexport default Loader\n","/**\n * Prefix classes to avoid name collisions.\n */\nconst prefix = 'alma-payment-plans'\n\n/**\n * Class names for the **payment plans** widget.\n * Those classes are intended to be used by the **merchant developer**.\n */\nconst STATIC_CUSTOMISATION_CLASSES = {\n  container: prefix + '-container',\n  eligibilityLine: prefix + '-eligibility-line',\n  eligibilityOptions: prefix + '-eligibility-options',\n  notEligibleOption: prefix + '-not-eligible-option',\n  paymentInfo: prefix + '-payment-info',\n  activeOption: prefix + '-active-option',\n}\n\nexport default STATIC_CUSTOMISATION_CLASSES\n","import { AlmaLogo } from 'assets/almaLogo'\nimport cx from 'classnames'\nimport Loader from 'components/Loader'\nimport useButtonAnimation from 'hooks/useButtonAnimation'\nimport useFetchEligibility from 'hooks/useFetchEligibility'\nimport React, { MouseEvent, useEffect, useState, FunctionComponent } from 'react'\nimport { ApiConfig, apiStatus, Card, ConfigPlan } from 'types'\nimport { getIndexOfActivePlan } from 'utils/merchantOrderPreferences'\nimport { paymentPlanInfoText, paymentPlanShorthandName } from 'utils/paymentPlanStrings'\nimport EligibilityModal from 'Widgets/EligibilityModal'\nimport STATIC_CUSTOMISATION_CLASSES from './classNames.const'\nimport s from './PaymentPlans.module.css'\n\ntype Props = {\n  purchaseAmount: number\n  apiData: ApiConfig\n  configPlans?: ConfigPlan[]\n  transitionDelay?: number\n  customerBillingCountry?: string\n  customerShippingCountry?: string\n  hideIfNotEligible?: boolean\n  monochrome?: boolean\n  suggestedPaymentPlan?: number | number[]\n  cards?: Card[]\n  hideBorder?: boolean\n  onModalClose?: (event: React.MouseEvent | React.KeyboardEvent) => void\n}\n\nconst VERY_LONG_TIME_IN_MS = 1000 * 3600\nconst DEFAULT_TRANSITION_TIME = 5500\n\nconst PaymentPlanWidget: FunctionComponent<Props> = ({\n  apiData,\n  configPlans,\n  hideIfNotEligible,\n  monochrome,\n  purchaseAmount,\n  suggestedPaymentPlan,\n  cards,\n  customerBillingCountry,\n  customerShippingCountry,\n  transitionDelay,\n  hideBorder = false,\n  onModalClose,\n}) => {\n  const [eligibilityPlans, status] = useFetchEligibility(\n    purchaseAmount,\n    apiData,\n    configPlans,\n    customerBillingCountry,\n    customerShippingCountry,\n  )\n  const eligiblePlans = eligibilityPlans.filter((plan) => plan.eligible)\n  const activePlanIndex = getIndexOfActivePlan({\n    eligibilityPlans,\n    suggestedPaymentPlan: suggestedPaymentPlan ?? 0,\n  })\n  const isSuggestedPaymentPlanSpecified = suggestedPaymentPlan !== undefined // 👈  The merchant decided to focus a tab\n  const isTransitionSpecified = transitionDelay !== undefined // 👈  The merchant has specified a transition time\n  const [isOpen, setIsOpen] = useState(false)\n  const openModal = () => setIsOpen(true)\n  const closeModal = (event: React.MouseEvent | React.KeyboardEvent) => {\n    setIsOpen(false)\n    onModalClose && onModalClose(event)\n  }\n\n  const eligiblePlanKeys = eligibilityPlans.reduce<number[]>(\n    (acc, plan, index) => (plan.eligible ? [...acc, index] : acc),\n    [],\n  )\n\n  /**\n   * If merchand specify a suggestedPaymentPlan and no transition, we set a very long transition delay.\n   * Otherwise, we set the transition delay specified by the merchant.\n   * If none of those properties are specified, we set a default transition delay.\n   * @returns\n   */\n  const realTransitionTime = () => {\n    if (isTransitionSpecified) {\n      return transitionDelay ?? DEFAULT_TRANSITION_TIME\n    }\n    if (isSuggestedPaymentPlanSpecified) {\n      return VERY_LONG_TIME_IN_MS\n    }\n    return DEFAULT_TRANSITION_TIME\n  }\n\n  const { current, onHover, onLeave } = useButtonAnimation(eligiblePlanKeys, realTransitionTime())\n\n  useEffect(() => {\n    // When API has given a response AND the marchand set an active plan by default.\n    if (status === apiStatus.SUCCESS && isSuggestedPaymentPlanSpecified) {\n      onHover(activePlanIndex) // We select the first active plan possible\n      onLeave() // We need to call onLeave to reset the animation\n    }\n  }, [status])\n\n  /**\n   * It takes a plan index and returns the index of that plan within the eligible plans\n   *\n   * @param {number} planIndex - The index of the plan that the user has selected.\n   * @returns The index of the planKey in the eligiblePlanKeys array.\n   */\n  const getIndexWithinEligiblePlans = (planIndex: number) => {\n    const index = eligiblePlanKeys.findIndex((planKey) => planKey === planIndex)\n    return index === -1 ? 0 : index\n  }\n\n  if (status === apiStatus.PENDING) {\n    return (\n      <div className={cx(s.widgetButton, s.pending)}>\n        <Loader />\n      </div>\n    )\n  }\n\n  if (\n    (hideIfNotEligible && eligiblePlans.length === 0) ||\n    eligibilityPlans.length === 0 ||\n    status === apiStatus.FAILED\n  ) {\n    return null\n  }\n\n  const handleOpenModal = (e: MouseEvent<HTMLDivElement>) => {\n    e.preventDefault()\n    if (eligiblePlans.length > 0) {\n      openModal()\n    }\n  }\n\n  return (\n    <>\n      <div\n        onClick={handleOpenModal}\n        className={cx(\n          s.widgetButton,\n          {\n            [s.clickable]: eligiblePlans.length > 0,\n            [s.unClickable]: eligiblePlans.length === 0,\n            [s.hideBorder]: hideBorder,\n          },\n          STATIC_CUSTOMISATION_CLASSES.container,\n        )}\n        data-testid=\"widget-button\"\n      >\n        <div className={cx(s.primaryContainer, STATIC_CUSTOMISATION_CLASSES.eligibilityLine)}>\n          <AlmaLogo className={s.logo} color={monochrome ? 'var(--off-black)' : undefined} />\n          <div className={cx(s.paymentPlans, STATIC_CUSTOMISATION_CLASSES.eligibilityOptions)}>\n            {eligibilityPlans.map((eligibilityPlan, key) => {\n              const isCurrent = key === current\n              return (\n                <div\n                  key={key}\n                  onMouseEnter={() => onHover(key)}\n                  onTouchStart={() => onHover(key)}\n                  onMouseOut={onLeave}\n                  onTouchEnd={onLeave}\n                  className={cx(s.plan, {\n                    [cx(s.active, STATIC_CUSTOMISATION_CLASSES.activeOption)]: isCurrent,\n                    [s.monochrome]: monochrome && isCurrent,\n                    [cx(s.notEligible, STATIC_CUSTOMISATION_CLASSES.notEligibleOption)]:\n                      !eligibilityPlan.eligible,\n                  })}\n                >\n                  {paymentPlanShorthandName(eligibilityPlan)}\n                </div>\n              )\n            })}\n          </div>\n        </div>\n        <div\n          className={cx(\n            s.info,\n            {\n              [cx(s.notEligible, STATIC_CUSTOMISATION_CLASSES.notEligibleOption)]:\n                eligibilityPlans[current] && !eligibilityPlans[current].eligible,\n            },\n            STATIC_CUSTOMISATION_CLASSES.paymentInfo,\n          )}\n        >\n          {eligibilityPlans.length !== 0 && paymentPlanInfoText(eligibilityPlans[current])}\n        </div>\n      </div>\n      {isOpen && (\n        <EligibilityModal\n          initialPlanIndex={getIndexWithinEligiblePlans(current)}\n          onClose={closeModal}\n          eligibilityPlans={eligiblePlans}\n          status={status}\n          cards={cards}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PaymentPlanWidget\n","import { EligibilityPlan } from 'types'\n\ntype Args = {\n  suggestedPaymentPlan: number | number[]\n  eligibilityPlans: EligibilityPlan[]\n}\n\n/**\n * It returns the **index** of the **first eligible plan** that matches the default installments count\n *\n * @param {number | number[]} suggestedPaymentPlan\n * @param {EligibilityPlan[]} eligibilityPlans\n * @returns number (index of the first eligible plan that matches the default installments count)\n */\nexport const getIndexOfActivePlan = ({ suggestedPaymentPlan, eligibilityPlans }: Args): number => {\n  const suggestedPaymentPlanArray = Array.isArray(suggestedPaymentPlan)\n    ? suggestedPaymentPlan\n    : [suggestedPaymentPlan]\n\n  for (const index in suggestedPaymentPlanArray) {\n    const installmentsCount = suggestedPaymentPlanArray[index]\n\n    const planFound = eligibilityPlans.findIndex((plan) => {\n      return (\n        plan.installments_count === installmentsCount &&\n        plan.eligible &&\n        // Remove the PayLater plans from the plan to target, we will code a better solution later\n        // To differentiate P1X from PayLater while using the `suggestedPaymentPlan` property.\n        !plan.deferred_days &&\n        !plan.deferred_months\n      )\n    })\n\n    if (planFound !== -1) {\n      return planFound\n    }\n  }\n\n  return 0\n}\n","import { useEffect, useState } from 'react'\n\ntype Props = {\n  current: number\n  onHover: (current: number) => void\n  onLeave: () => void\n}\nconst useButtonAnimation = (iterateValues: number[], transitionDelay: number): Props => {\n  const [current, setCurrent] = useState(0)\n  const [update, setUpdate] = useState(true)\n\n  useEffect(() => {\n    let timeout: ReturnType<typeof setTimeout>\n    let isMounted = true\n\n    if (transitionDelay === -1) {\n      return\n    }\n\n    if (iterateValues.length !== 0) {\n      if (!iterateValues.includes(current) && update) setCurrent(iterateValues[0])\n      timeout = setTimeout(() => {\n        if (update && isMounted) {\n          setCurrent(\n            iterateValues[\n              iterateValues.includes(current)\n                ? (iterateValues.indexOf(current) + 1) % iterateValues.length\n                : 0\n            ],\n          )\n        }\n      }, transitionDelay)\n    }\n    return () => {\n      isMounted = false\n      clearTimeout(timeout)\n    }\n  }, [iterateValues, current])\n\n  return {\n    current,\n    onHover: (current: number) => {\n      setCurrent(current)\n      setUpdate(false)\n    },\n    onLeave: () => {\n      setUpdate(true)\n    },\n  }\n}\nexport default useButtonAnimation\n","import { ApiMode } from 'consts'\nimport IntlProvider from 'intl/IntlProvider'\nimport React from 'react'\nimport { render, unmountComponentAtNode } from 'react-dom'\nimport {\n  Locale,\n  ModalOptions,\n  PaymentPlanWidgetOptions,\n  WidgetNames,\n  WidgetOptions,\n  widgetTypes,\n} from 'types'\nimport ModalContainer from 'Widgets/EligibilityModal/ModalContainer'\nimport PaymentPlanWidget from 'Widgets/PaymentPlans'\n\nexport type AddReturnType =\n  | {\n      open: () => void\n      close: (event: React.MouseEvent | React.KeyboardEvent) => void\n    }\n  | undefined\n\nexport class WidgetsController {\n  constructor(private readonly apiData: { domain: ApiMode; merchantId: string }) {}\n\n  add(widget: WidgetNames, options: WidgetOptions): AddReturnType {\n    const containerDiv = document.querySelector(options.container)\n\n    if (containerDiv) {\n      unmountComponentAtNode(containerDiv)\n    }\n\n    if (widget === widgetTypes.PaymentPlans) {\n      const {\n        container,\n        purchaseAmount,\n        plans,\n        transitionDelay,\n        hideIfNotEligible,\n        hideBorder = false,\n        monochrome = true,\n        suggestedPaymentPlan,\n        customerBillingCountry,\n        customerShippingCountry,\n        locale = Locale.en,\n        cards,\n        onModalClose,\n      } = options as PaymentPlanWidgetOptions\n\n      if (containerDiv) {\n        render(\n          <IntlProvider locale={locale}>\n            <PaymentPlanWidget\n              apiData={this.apiData}\n              configPlans={plans}\n              hideIfNotEligible={hideIfNotEligible}\n              monochrome={monochrome}\n              purchaseAmount={purchaseAmount}\n              suggestedPaymentPlan={suggestedPaymentPlan}\n              cards={cards}\n              customerBillingCountry={customerBillingCountry}\n              customerShippingCountry={customerShippingCountry}\n              transitionDelay={transitionDelay}\n              hideBorder={hideBorder}\n              onModalClose={onModalClose}\n            />\n          </IntlProvider>,\n          document.querySelector(container),\n        )\n      }\n    }\n\n    if (widget === widgetTypes.Modal) {\n      const {\n        container,\n        clickableSelector,\n        purchaseAmount,\n        plans,\n        locale = Locale.en,\n        customerBillingCountry,\n        customerShippingCountry,\n        cards,\n        onClose,\n      } = options as ModalOptions\n\n      const close = (event: React.MouseEvent | React.KeyboardEvent) => {\n        if (!containerDiv) return\n        unmountComponentAtNode(containerDiv)\n        onClose && onClose(event)\n      }\n      const renderModal = () => {\n        render(\n          <IntlProvider locale={locale}>\n            <ModalContainer\n              purchaseAmount={purchaseAmount}\n              apiData={this.apiData}\n              configPlans={plans}\n              customerBillingCountry={customerBillingCountry}\n              customerShippingCountry={customerShippingCountry}\n              onClose={close}\n              cards={cards}\n            />\n          </IntlProvider>,\n          document.querySelector(container),\n        )\n      }\n\n      // if clickableSelector is provided, add an onClick event handler to open the Modal.\n      if (clickableSelector) {\n        document.querySelector(clickableSelector)?.addEventListener('click', renderModal, false)\n      }\n\n      return {\n        open: renderModal,\n        close,\n      }\n    }\n  }\n}\n","export const SANDBOX_API_URL = 'https://api.sandbox.getalma.eu'\nexport const LIVE_API_URL = 'https://api.getalma.eu'\n\nexport enum ApiMode {\n  LIVE = 'https://api.getalma.eu',\n  TEST = 'https://api.sandbox.getalma.eu',\n}\n","import { widgetTypes } from 'types'\nimport { ApiMode } from './consts'\nimport './main.css'\nimport * as utils from './utils'\nimport './utils/polyfills' // todo Looks like legacy code, needs to be tested on multiple browsers (old ones too)\nimport { WidgetsController } from './widgets_controller'\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace Widgets {\n  export function initialize(merchantId: string, mode: ApiMode): WidgetsController {\n    return new WidgetsController({ domain: mode, merchantId })\n  }\n  export const PaymentPlans = widgetTypes.PaymentPlans\n  export const Modal = widgetTypes.Modal\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace Utils {\n  export const priceToCents = utils.priceToCents\n  export const priceFromCents = utils.priceFromCents\n  export const formatCents = utils.formatCents\n}\n\nexport { ApiMode } from './consts'\n"],"names":["widgetTypes","apiStatus","Locale","priceToCents","price","Math","round","priceFromCents","cents","Number","toFixed","formatCents","String","replace","isP1X","plan","installments_count","deferred_days","deferred_months","ElementProto","window","Element","prototype","matches","msMatchesSelector","mozMatchesSelector","webkitMatchesSelector","selector","element","this","elements","document","ownerDocument","querySelectorAll","index","Boolean","closest","nodeType","parentNode","trim","DOMException","reason","message","Error","DOMTokenListProto","testClass","wsRE","wsIndex","checkIfValidClassListEntry","O","V","search","DOMTokenList","Object","hasOwnProp","hasOwnProperty","defineProperty","allowTokenListConstruction","skipPropChange","TypeError","whenPropChanges","evt","event","prop","propertyName","target","srcElement","protoObjProto","strval","tokens","split","resTokenList","oldLen","length","a","cI","cLen","sub","innerI","i","classList","className","polyfillClassList","ele","detachEvent","protoObj","toks","value","enumerable","get","configurable","set","newVal","writeable","attachEvent","toString","toLocaleString","add","v","argLen","arguments","val","proto","Len","resStr","remove","is","call","documentElement","firstChild","appendChild","createElement","styleSheet","cssText","item","n","toggle","oldValue","oldToken","newToken","contains","forEach","f","tArg","entries","that","next","done","values","keys","require$$0","k","Symbol","for","l","m","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","g","b","d","e","h","defaultProps","$$typeof","type","props","_owner","current","reactJsxRuntime_production_min","jsx","jsxs","jsxRuntimeModule","exports","getTranslationsByLocale","locale","slice","fr","messagesFR","es","messagesES","it","messagesIT","de","messagesDE","pt","messagesPT","nl","messagesNL","en","messagesEN","Provider","children","IntlProvider","messages","defaultLocale","isPlanEligible","configPlan","eligible","purchase_amount","minAmount","maxAmount","getPaymentPlanBoundaries","purchaseAmountConstraints","constraints","max","minimum","min","maximum","useFetchEligibility","purchaseAmount","domain","merchantId","plans","customerBillingCountry","customerShippingCountry","eligibility","setEligibility","useState","status","setStatus","PENDING","configInstallments","map","installmentsCount","deferredDays","deferredMonths","useEffect","billing_address","country","shipping_address","async","url","data","headers","fetch","method","body","JSON","stringify","json","queries","Authorization","then","res","SUCCESS","catch","FAILED","eligibilities","configPlans","eligibilityDeferredDays","relatedConfigPlan","find","configPlanDeferredDays","filter","prefix","STATIC_CUSTOMISATION_CLASSES","desktopModal","mobileModal","leftSide","bullet","rightSide","title","info","infoMessage","eligibilityOptions","activeOption","closeButton","scheduleDetails","scheduleTotal","scheduleCredit","cardContainer","summary","TotalBlock","currentPlan","intl","useIntl","total","customer_total_cost_amount","creditCost","TAEG","annual_interest_rate","customerFees","isCredit","cx","s","FormattedMessage","tagName","id","defaultMessage","FormattedNumber","style","currency","Fragment","formatNumber","taegPercentage","maximumFractionDigits","LoadingIndicator","width","height","viewBox","fill","xmlns","CrossIcon","color","ControlledModal","isOpen","onClose","contentClassName","scrollable","Modal","setAppElement","overlayClassName","onAfterOpen","noScroll","on","onAfterClose","off","onRequestClose","shouldCloseOnOverlayClick","shouldCloseOnEsc","onClick","s$b_contentScrollable","paymentPlanShorthandName","payment","withNoFee","payment_plan","every","customer_fee","customer_interest","paymentPlanInfoText","deferredDaysCount","totalAmount","total_amount","dueDate","FormattedDate","secondsToMilliseconds","due_date","day","month","year","areInstallmentsOfSameAmount","installment","firstInstallmentAmount","numberOfRemainingInstallments","othersInstallmentAmount","EligibilityPlansButtons","eligibilityPlans","currentPlanIndex","setCurrentPlanIndex","eligibilityPlan","Installment","s$9_isCurrent","isToday","s$9_bold","Schedule","t","AlmaLogo","svgProps","AmexCard","x1","x2","y1","y2","offset","stopColor","fillRule","VisaCard","MasterCard","version","stroke","strokeWidth","transform","x","y","rx","cy","r","fillOpacity","CbCard","Cards","cards","uniqueCards","Array","from","Set","card","Info","isCurrentPlanP1X","strong","chunks","Title","isSomePlanDeferred","DesktopModal","MobileModal","EligibilityModal","initialPlanIndex","ModalComponent","useMediaQuery","minWidth","eligiblePlans","some","ariaHideApp","ModalContainer","apiData","Loader","container","eligibilityLine","notEligibleOption","paymentInfo","PaymentPlanWidget","hideIfNotEligible","monochrome","suggestedPaymentPlan","transitionDelay","hideBorder","onModalClose","activePlanIndex","suggestedPaymentPlanArray","isArray","planFound","findIndex","isSuggestedPaymentPlanSpecified","isTransitionSpecified","setIsOpen","eligiblePlanKeys","reduce","acc","onHover","onLeave","iterateValues","setCurrent","update","setUpdate","timeout","isMounted","includes","setTimeout","indexOf","clearTimeout","preventDefault","s_clickable","s_unClickable","s_hideBorder","isCurrent","onMouseEnter","onTouchStart","onMouseOut","onTouchEnd","s_monochrome","planIndex","planKey","o","WidgetsController","widget","options","containerDiv","querySelector","unmountComponentAtNode","PaymentPlans","render","clickableSelector","close","renderModal","addEventListener","open","Widgets","Utils","ApiMode","initialize","mode","utils.priceToCents","utils.priceFromCents","utils.formatCents"],"mappings":"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","x_google_ignoreList":[3,4]}