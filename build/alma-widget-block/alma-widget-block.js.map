{"version":3,"file":"alma-widget-block/alma-widget-block.js","mappings":";;;;;;;;;;;;;;;;;;AAAuD;AAAA;AAGhD,MAAMG,IAAI,GAAGA,CAAC;EAACC,UAAU;EAAEC;AAAa,CAAC,KAAK;EACjD,MAAMC,UAAU,GAAGN,sEAAa,CAAC,CAAC;EAClC,oBACIE,sDAAA;IAAKK,EAAE,EAAC,aAAa;IAAA,GAAKP,sEAAa,CAAC,CAAC;IAAAQ,QAAA,EAAE;EAAW,CAAK,CAAC;AAEpE,CAAC;;;;;;;;;;ACRD;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;ACNoD;AACE;AAClB;AACR;AAAA;AAE5B,MAAMG,QAAQ,gBACVT,sDAAA;EAAKU,KAAK,EAAC,KAAK;EAACC,MAAM,EAAC,KAAK;EAACC,OAAO,EAAC,aAAa;EAACC,IAAI,EAAC,MAAM;EAACC,KAAK,EAAC,4BAA4B;EAAAR,QAAA,eAC9FN,sDAAA;IACIe,CAAC,EAAC,6cAA6c;IAC/cF,IAAI,EAAC;EAAS,CAAC;AAAC,CACnB,CACR;;AAED;AACA,MAAMG,IAAI,GAAGA,CAAA,kBAAMhB,sDAAA;EAAKK,EAAE,EAAC,aAAa;EAAA,GAAKP,kEAAa,CAACkB,IAAI,CAAC,CAAC;EAAAV,QAAA,EAAE;AAAW,CAAK,CAAC;AAEpFC,oEAAiB,CAACC,6CAAa,EAAE;EAC7BU,QAAQ,EAAEV,iDAAiB;EAC3BW,IAAI,EAAEV,QAAQ;EACdW,IAAI,EAAEnB,uCAAI;EACVe;AACJ,CAAC,CAAC,C","sources":["webpack://alma-woocommerce-gateway/./src/alma-widget-block/edit.js","webpack://alma-woocommerce-gateway/external window \"ReactJSXRuntime\"","webpack://alma-woocommerce-gateway/external window [\"wp\",\"blockEditor\"]","webpack://alma-woocommerce-gateway/external window [\"wp\",\"blocks\"]","webpack://alma-woocommerce-gateway/webpack/bootstrap","webpack://alma-woocommerce-gateway/webpack/runtime/compat get default export","webpack://alma-woocommerce-gateway/webpack/runtime/define property getters","webpack://alma-woocommerce-gateway/webpack/runtime/hasOwnProperty shorthand","webpack://alma-woocommerce-gateway/webpack/runtime/make namespace object","webpack://alma-woocommerce-gateway/./src/alma-widget-block/alma-widget-block.js"],"sourcesContent":["import {useBlockProps,} from '@wordpress/block-editor';\n\n\nexport const Edit = ({attributes, setAttributes}) => {\n    const blockProps = useBlockProps();\n    return (\n        <div id=\"alma-widget\" {...useBlockProps()}>Widget ALMA</div>\n    );\n};","module.exports = window[\"ReactJSXRuntime\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import {registerBlockType} from '@wordpress/blocks';\nimport {useBlockProps} from '@wordpress/block-editor';\nimport metadata from './block.json';\nimport {Edit} from './edit';\n\nconst almaIcon = (\n    <svg width=\"451\" height=\"512\" viewBox=\"0 0 451 512\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n            d=\"M347.22 123.046C323.434 29.8196 273.131 0 225.249 0C177.367 0 127.063 29.8196 103.278 123.046L0 512H101.787C118.369 447.034 169.48 410.847 225.249 410.847C281.018 410.847 332.129 447.099 348.71 512H450.56L347.22 123.046ZM225.249 320.219C192.831 320.219 163.456 333.083 141.782 353.937L200.159 127.594C205.748 105.96 214.008 99.0737 225.311 99.0737C236.614 99.0737 244.874 105.96 250.463 127.594L308.778 353.937C287.104 333.083 257.667 320.219 225.249 320.219Z\"\n            fill=\"#FA5022\"/>\n    </svg>\n);\n\n// const edit = (attributes) => <div id=\"alma-widget\" {...useBlockProps()}>Widget ALMA</div>;\nconst save = () => <div id=\"alma-widget\" {...useBlockProps.save()}>Widget ALMA</div>;\n\nregisterBlockType(metadata.name, {\n    category: metadata.category,\n    icon: almaIcon,\n    edit: Edit,\n    save,\n});\n"],"names":["useBlockProps","jsx","_jsx","Edit","attributes","setAttributes","blockProps","id","children","registerBlockType","metadata","almaIcon","width","height","viewBox","fill","xmlns","d","save","name","category","icon","edit"],"sourceRoot":""}